# -*- coding: utf-8 -*-
"""exercicio_1_A_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u4-Lwc12-k7XiPNEIfhz5Ft9D4cLSY1g
"""

#Atividade 1 - A 
import numpy as np
import matplotlib.pyplot as plt
from numpy import pi
from numpy.fft import fft, ifft, fftfreq, fftshift
import scipy as sc
from scipy import signal

# Função para criar o sinal quadrado
def square(wt, duty = 0.5):
    sq = sc.signal.square(wt, duty=duty )
    return sq

def main():
  # definindo o sinal continuo periódico
  fs = 1              # freq. do sinal periódico
  w0 = 2*pi*fs        # frequencia angular
  Ts = 1/fs           # período fundamental do sinal
  Tam = 1/(100*fs)   	# período de amostragem 100 vezes menor que o período do sinal

  # quantidade de periodos no vetor do sinal
  Np = 4          
  # Criando o vetor de tempo,5 períodos, e intervalo de Tam
  t = np.arange(0,Ts*Np,Tam)
  
  # criando s(t)
  s = 0.5 * square(w0*t,duty = 0.25) + 0.5

  # Plotando o grafico do sinal s(t) criado. 
  plt.figure(figsize=(12, 8))
  plt.plot(t, s)
  plt.title('Sinal Vs(t)')
  plt.xlabel('t')
  plt.ylabel('Vs(t)')
  plt.show()
  
  # Calculando a FS
  X = (fft(s)/len(s))
  
  # #criando o vetor de frequencia
  w = fftfreq(len(t), d=(1/Ts)*Tam)

  #Fazendo o deslocamento do sinal e do vetor de frequencia criados
  Xd = fftshift(X)
  wd = fftshift(w)

  # Calculo do Modulo é do angulo do sinal
  ModX = np.abs(Xd)
  phaseX = np.angle(Xd)

  plt.figure(figsize=(12, 8))
  plt.stem(wd, ModX, use_line_collection=True)
  plt.title('Representação FS do modulo |X(k)| do sinal Vs(t)')
  plt.xlabel('t')
  plt.ylabel('|X(t)|')
  plt.grid(True)
  plt.show()

  plt.figure(figsize=(12, 8))
  plt.stem(wd, phaseX, use_line_collection=True)
  plt.title('Representação FS do angulo angle(X(k)) sinal Vs(t)')
  plt.xlabel('t')
  plt.ylabel('angle(X(t))')
  plt.grid(True)
  plt.show()


if __name__ == "__main__":
  main()

