# -*- coding: utf-8 -*-
"""exercicio_4_C_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11E7Zd8Y4Bk3ja7uwyAgHvBE2iStFHyeV
"""

#Atividade 4 - C
import numpy as np
import matplotlib.pyplot as plt

def degrau(n0, sinal):
  u = []

  for i in range(-2, 21):
    if i >= n0:
      if sinal == 1:
        u.append(1)
      else:
        u.append(-1)
    else:
      u.append(0)

  return u

def soma_degrau(u1, u2):
  u_total = []

  j = 0
  for i in range(-2, 21):
    soma = u1[j] + u2[j]
    u_total.append(((-1)**i) * soma)
    j += 1
  
  return u_total

def main():
  n = np.linspace(-2, 20, 23)
  n_2 = np.linspace(-4, 40, 45)

  u_2 = degrau(-2, 1)
  u_3 = degrau(3, 0)

  h = soma_degrau(u_2, u_3)
  x = degrau(0, 1)

  y = np.convolve(x, h)

  plt.figure(figsize=(12, 6))
  plt.stem(n, h, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("h[n]")
  plt.title('Sinal h[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n, x, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("x[n]")
  plt.title('Sinal x[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n_2, y, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("y[n]")
  plt.title('Sinal y[n]')
  plt.show()

if __name__ == "__main__":
  main()