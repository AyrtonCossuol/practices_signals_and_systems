# -*- coding: utf-8 -*-
"""exercicio_1_B_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LOftT3KOxUJZ2Ahf6XJNiQLxUcul39ZJ
"""

# Exercicio - 1 - B
import numpy as np
import matplotlib.pyplot as plt
from numpy.fft import fft, ifft, fftfreq, fftshift

def rampa(t, to):
  rampa = np.arange(t[0], (t[-1] + t[1] - t[0]), t[1]-t[0])

  j = 0
  for i in range(len(rampa)):
    if(to > rampa[i]):
      rampa[i] = 0
    else:
      rampa[i] = j
      j = j + (t[1]-t[0])
  
  return rampa

def main():
  w_amp = 1000
  tam = (2 * np.pi) / w_amp
  t = np.arange(-10, 10 + tam, tam)

  x = 0.2 * (rampa(t, -5) - (2 * rampa(t, 0)) + rampa(t, 5))
  p = np.cos(10 * t)
  
  y = x * p

  # N - tamanho da DTFS
  N = np.power(2, 14)

  # calculando a FT
  Y = (tam * N) * fft(y, N) / N

  #criando o vetor de frequencia
  w = fftfreq(len(Y), d=(tam)) * (2 * np.pi)

  # posicionando a freq. zero no meio do gr√°fico
  wd, Yd = fftshift(w), fftshift(Y)

  # calculando o modulo - magnitude do espectro
  ModY = np.abs(Yd)

  fig, ax1 = plt.subplots(2, 1)
  ax1[0].plot(t, y, linewidth=2, label="")
  ax1[0].set_ylabel("Amplitude")
  ax1[0].set_xlabel("t")
  ax1[0].set_xlim(-7.5, 7.5)
  ax1[0].set_title('y(t)')
  ax1[0].grid(True)

  ax1[1].plot(wd, ModY, linewidth=1, label="")
  ax1[1].set_ylabel("Amplitude")
  ax1[1].set_xlabel("rad/s")
  ax1[1].set_xlim(-20, 20)
  ax1[1].set_title('|Y(e^jw)|')
  ax1[1].grid(True)

  plt.tight_layout()
  plt.show()

if __name__ == '__main__':
    main()

