# -*- coding: utf-8 -*-
"""exercicio_4_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hMH0kO5IbhYABBGnRHNjsAh2g8Q-HhXr
"""

#Atividade 4
import numpy as np
import matplotlib.pyplot as plt

#Função para criar o h[n] (degrau) proposta no exercicio
def sinal_u():
  u = []

  for i in range(0, 21):
    u.append(1)
  
  return u

#Função para fazer a multiplicação do sinal h[n] pela constante proposta no 
#exercicio.
def junta_sinal(a, u):
  result = []

  for i in range(0, 21):
    result.append((a**i) * u[i])

  return result

#Função main que cria todos os n's, o sinal h[n] e x[n] e por fim a convolução 
#junto com as respostas com graficos
def main():
  n = np.linspace(0, 20, 21)
  n2 = np.linspace(0, 40, 41)
  
  a = 0.5
  h = sinal_u()
  x = junta_sinal(a, h)

  y = np.convolve(h, x)

  plt.figure(figsize=(12, 6))
  plt.stem(n, h, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("h[n]")
  plt.title('Sinal h[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n, x, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("x[n]")
  plt.title('Sinal x[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n2, y, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("y[n]")
  plt.title('Sinal y[n]')
  plt.show()

if __name__ == "__main__":
  main()

