# -*- coding: utf-8 -*-
"""exercicio_3_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hMH0kO5IbhYABBGnRHNjsAh2g8Q-HhXr
"""

#Atividade 3
import numpy as np
import matplotlib.pyplot as plt

#Função que gera o degrau para os sinais de x[n] e h[n]
def degrau(n0, sinal):
  u = []

  for i in range((0-n0), (101-n0)):
    u.append(1) if sinal == 1 else u.append(-1)
  
  return u

#Função que faz a soma entre dois sinais e analisando os deslocamentos
def junta_funcao(x, y, desloc1, desloc2):
  result = []

  j = 0
  k = 0
  for i in range(0, 101):
    if i >= desloc1:
      if i >= desloc2:
        result.append(x[j] + y[k])
        j += 1
        k += 1
      else:
        result.append(x[j])
        j += 1
    else:
      result.append(0)

  return result

#Função main que faz a crição dos n's e os sinais com os respectivos degrais e 
#fazendo a soma entre eles criando os sinais x[n] e h[n] e logo apos criando a 
#convolução junto com os graficos.
def main():
  n0, n1, n2, n3 = 0, 10, 2, 7

  n_0 = np.linspace(0-n0, 100-n0, 101)
  n_1 = np.linspace(0-n1, 100-n1, 101)
  n_2 = np.linspace(0-n2, 100-n2, 101)
  n_3 = np.linspace(0-n3, 100-n3, 101)
  n_4 = np.linspace(0, 201, 201)

  u = degrau(n0, 1)
  u10 = degrau(n1, 0) 
  u2 = degrau(n2, 1)
  u7 = degrau(n3, 0)

  h = junta_funcao(u, u10, n0, n1)
  x = junta_funcao(u2, u7, n2, n3)

  y = np.convolve(x, h)

  plt.figure(figsize=(12, 6))
  plt.stem(n_0, h, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("h[n]")
  plt.title('Sinal h[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n_0, x, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("x[n]")
  plt.title('Sinal x[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n_4, y, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("y[n]")
  plt.title('Sinal y[n]')
  plt.show()

if __name__ == "__main__":
  main()

