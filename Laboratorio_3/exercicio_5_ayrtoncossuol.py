# -*- coding: utf-8 -*-
"""exercicio_5_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hMH0kO5IbhYABBGnRHNjsAh2g8Q-HhXr
"""

#Atividade 5 
import numpy as np
import matplotlib.pyplot as plt

#Função para criar o sinal x[n] 
def sinal_x():
  x = []

  for i in range(0, 21):
    if i <= 4:
      x.append(1)
    else:
      x.append(0)

  return x

#Função para criar o sinal h[n] 
def sinal_h(alpha):
  h = []

  for i in range(0, 21):
    if i <= 6:
      h.append((alpha**i))

    else: 
      h.append(0)

  return h

#Função main que cria os n's, os sinais x[n] e h[n] junto da convolução e os 
#graficos.
def main():
  n = np.linspace(0, 20, 21)
  n2 = np.linspace(0, 40, 41)
  
  alpha = 0.8
  x = sinal_x()
  h = sinal_h(alpha)

  y = np.convolve(h, x)

  plt.figure(figsize=(12, 6))
  plt.stem(n, x, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("x[n]")
  plt.title('Sinal x[n]')
  plt.show()
  
  plt.figure(figsize=(12, 6))
  plt.stem(n, h, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("h[n]")
  plt.title('Sinal h[n]')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.stem(n2, y, use_line_collection = True)
  plt.xlabel("[n]")
  plt.ylabel("y[n]")
  plt.title('Sinal y[n]')
  plt.show()

if __name__ == "__main__":
  main()

