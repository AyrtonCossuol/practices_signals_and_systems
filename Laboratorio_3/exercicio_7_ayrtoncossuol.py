# -*- coding: utf-8 -*-
"""exercicio_7_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hMH0kO5IbhYABBGnRHNjsAh2g8Q-HhXr
"""

#Exercicio 7
import numpy as np
import matplotlib.pyplot as plt

#Função que faz a criação do sinal x(t) junto com o periodo de amostragem
#passada como parametro. 
def sinal_x(Ts):
  x = []

  for i in np.arange(-10, 10, Ts):
    if i > 0 and i < 1:
      x.append(1)
    else:
      x.append(0)

  return x

#Função que cria o sinal h(t) junto com o periodo de amostragem passado como
#parametro.
def sinal_h(Ts):
  h = []

  for i in np.arange(-10, 10, Ts):
    if i > 0 and i < 2:
      h.append(i)
    else:
      h.append(0)

  return h

#Função main que faz a criação dos t's, dos sinais x(t) e h(t), junto com o 
#periodo de amostragem, convolução e os respectivos plot dos sinais.
def main():
  Ts = 0.0001
  
  t = np.arange(-10, 10, Ts)
  t_2 = np.arange(-20, 19.9999, Ts)

  x = sinal_x(Ts)
  h = sinal_h(Ts)

  y = np.convolve(x, h) * Ts

  plt.figure(figsize=(12, 6))
  plt.plot(t, x)
  plt.xlabel("(t)")
  plt.ylabel("x(t)")
  plt.title('Sinal x(t)')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.plot(t, h)
  plt.xlabel("(t)")
  plt.ylabel("h(t)")
  plt.title('Sinal h(t)')
  plt.show()

  plt.figure(figsize=(12, 6))
  plt.plot(t_2, y)
  plt.axis([-0.03, 3.2, -0.01, 1.55])
  plt.xlabel("(t)")
  plt.ylabel("y(t)")
  plt.title('Sinal y(t)')
  plt.show()

if __name__ == "__main__":
  main()

