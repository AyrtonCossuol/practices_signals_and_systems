# -*- coding: utf-8 -*-
"""exercicio_2_A_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1371vuzaujYWTWtZuTALqLbjSjNcx6Zda
"""

#Atividade 2 - A
import numpy as np
import matplotlib.pyplot as plt
from numpy import pi
from numpy.fft import fft, ifft, fftfreq, fftshift

def cria_sinal(n):
  return np.cos(((np.pi * 6)/17) * n)

def retorna_sinal(X, x):
  return np.real(ifft(X)*len(x))

def main():
  # criando o vetor de amostra com tamanho nper  periodos do sinal
  N = 17 # periodo do sinal e a quantidade de periodos em x[n]
  n = np.arange(0, N)

  #criando o vetor do sinal X[n] = cos(((pi * 6)/17) * n)
  X = cria_sinal(n)

  #criando o vetor de frequencia
  w = fftfreq(len(n), d=1/N)

  # retornando o sinal ao dominio do tempo e ainda ignorando os erros 
  # de arrendondamento do fft e ifft
  xr = retorna_sinal(X, n)

  plt.figure(figsize=(12, 8))
  plt.stem(w, xr, use_line_collection=True)
  plt.title('xr[n]')
  plt.ylabel('Amplitude')
  plt.xlabel('Amostra')
  plt.show()

if __name__== "__main__":
  main()
