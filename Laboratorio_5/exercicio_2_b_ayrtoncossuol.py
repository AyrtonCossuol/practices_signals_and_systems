# -*- coding: utf-8 -*-
"""exercicio_2_B_AyrtonCossuol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1371vuzaujYWTWtZuTALqLbjSjNcx6Zda
"""

#Atividade 2 - B 
import numpy as np
import matplotlib.pyplot as plt
from numpy import pi
from numpy.fft import fft, ifft, fftfreq, fftshift

def cria_sinal(n):
  return np.cos(((np.pi * 10)/21) * n) + (np.cos(((np.pi * 4)/21) * n)*1j)

def shift_sinal(X):
  return fftshift(X)

def retorna_sinal(X, x):
  return np.real(ifft(X)*len(x))

def main():
  # criando o vetor de amostra com tamanho nper  periodos do sinal
  # periodo do sinal e a quantidade de periodos em x[n]
  N, nper = 21, 1 
  n = np.arange(0,nper*N)

  #criando o vetor do sinal x[n] = cos(((pi * 10)/21) * n) + (sin(((pi * 4)/21) * n)*1j)
  X = cria_sinal(n)

  #criando o vetor de frequencia
  w = fftfreq(len(n), d=1/N)

  # retornando o sinal ao dominio do tempo e ainda ignorando os erros 
  # de arrendondamento do fft e ifft
  xr = retorna_sinal(X, n)

  plt.figure(figsize=(12, 8))
  plt.stem(w, xr, use_line_collection=True)
  plt.title('xr[n]')
  plt.ylabel('Amplitude')
  plt.xlabel('Amostra')
  plt.show()

if __name__ == "__main__":
  main()

